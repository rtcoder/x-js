{"version":3,"file":"index.umd.js","sources":["../src/main.ts"],"sourcesContent":["type MixedObject = {\n  [key: string]: any;\n}\ntype XInstanceData = {\n  container: HTMLElement | string;\n  data: MixedObject;\n  methods?: MixedObject;\n}\ntype Binding = {\n  path: string,\n  placeholder: string,\n};\ntype Bindings = Binding[];\ntype VNode = {\n  type: string;\n  props: MixedObject;\n  content: string | null;\n  children: VNode[];\n  element: HTMLElement;\n  bindPathList: Bindings;\n}\nconst MODEL_PROP = '@model';\nconst CLICK_PROP = '@click';\nconst IF_PROP = '@if';\n\nfunction getBindings(element: HTMLElement): Bindings {\n  const textBindings = getBindingsForText(element.textContent);\n  if (element.nodeType === Node.TEXT_NODE) {\n    return textBindings;\n  }\n  const attributeBindings = [];\n  const xModel = element.getAttribute(MODEL_PROP);\n  if (xModel) {\n    attributeBindings.push({path: xModel, placeholder: xModel});\n  }\n  return [...textBindings, ...attributeBindings];\n}\n\nfunction getBindingsForText(content: string | null): Bindings {\n  if (!content) {\n    return [];\n  }\n  const matches = Array.from(content.matchAll(/\\{\\s*([\\w.]+)\\s*\\}/g));\n  return matches.map((match) => ({\n    path: match[1].trim(),\n    placeholder: match[0],\n  }));\n}\n\nfunction getChildren(element: HTMLElement): VNode[] {\n  return Array.from(element.childNodes).map((child) => {\n    if (child.nodeType === Node.ELEMENT_NODE) {\n      return createVirtualDOM(child as HTMLElement);\n    } else if (child.nodeType === Node.TEXT_NODE) {\n      return {\n        type: 'text',\n        content: child.textContent,\n        props: {},\n        children: [],\n        element: child,\n        bindPathList: getBindingsForText(child.textContent),\n      };\n    } else if (child.nodeType === Node.COMMENT_NODE) {\n      return {\n        type: 'comment',\n        content: child.textContent,\n        props: {},\n        children: [],\n        element: child,\n        bindPathList: getBindingsForText(child.textContent),\n      };\n    }\n  }).filter(Boolean) as VNode[];\n}\n\n function createVirtualDOM(element: HTMLElement): VNode {\n  const type = element.tagName.toLowerCase();\n  const props: MixedObject = {};\n  const content = element.textContent;\n\n  Array.from(element.attributes).forEach((attr) => {\n    props[attr.name] = attr.value;\n  });\n\n  const children = getChildren(element);\n  const bindings = element.childNodes.length ? [] : getBindings(element);\n  return {type, props, children, content, element, bindPathList: bindings};\n}\n\nfunction createReactiveModel(model: any, onChange: (path: string) => void): any {\n  function createProxy(obj: any, path: string[] = []): any {\n    return new Proxy(obj, {\n      get(target, key) {\n        const value = target[key];\n        if (typeof value === 'object' && value !== null) {\n          return createProxy(value, [...path, key as string]);\n        }\n        return value;\n      },\n      set(target, key, value) {\n        console.log('Model changed at:', [...path, key as string].join('.'), 'New value:', value);\n        target[key] = value;\n        onChange([...path, key as string].join('.'));\n        return true;\n      },\n    });\n  }\n\n  return createProxy(model);\n}\n\nfunction updateHTML(root: HTMLElement, vDom: VNode, model: any, path: string): void {\n  vDom.children.forEach((childVNode, index) => {\n    if (childVNode.props[IF_PROP]) {\n      const condition = childVNode.props[IF_PROP];\n      const isVisible = new Function('model', `with(model) { return ${condition}; }`)(model);\n\n      if (!isVisible) {\n        childVNode.element.style.display = 'none';\n        return;\n      } else {\n        childVNode.element.style.display = '';\n      }\n    }\n    if (childVNode.children.length) {\n      updateHTML(root, childVNode, model, path);\n    }\n    if (childVNode.props[MODEL_PROP] === path) {\n      const value = path.split('.').reduce((obj, key) => obj[key], model);\n      if (childVNode.element.tagName === 'INPUT') {\n        const input = childVNode.element as HTMLInputElement;\n        if (input.value !== value) {\n          input.value = value;\n        }\n      } else {\n        childVNode.element.textContent = value;\n      }\n      return;\n    }\n    if (!childVNode.bindPathList.length) {\n      return;\n    }\n\n    const foundBindings = childVNode.bindPathList.filter((bindPath) => bindPath.path === path);\n    if (!foundBindings.length) {\n      return;\n    }\n    let newContent = childVNode.content || '';\n    childVNode.bindPathList.forEach((binding) => {\n      const value = binding.path.split('.').reduce((obj, key) => obj[key], model);\n      newContent = newContent!.replace(binding.placeholder, value ?? '');\n    });\n    childVNode.element.textContent = newContent;\n  });\n}\n\nfunction bindXModel(element: HTMLElement, model: any, path: string): void {\n  const target = path.split('.').reduce((obj, key) => obj[key], model);\n\n  if (element.tagName === 'INPUT') {\n    const input = element as HTMLInputElement;\n\n    // Ustaw wartość początkową\n    input.value = target;\n\n    // Zdarzenie na zmianę wartości\n    input.addEventListener('input', (e) => {\n      const newValue = (e.target as HTMLInputElement).value;\n      const keys = path.split('.');\n      const lastKey = keys.pop()!;\n      const targetObject = keys.reduce((obj, key) => obj[key], model);\n      targetObject[lastKey] = newValue; // To wywoła Proxy\n    });\n  } else {\n    // Ustaw tekst początkowy\n    console.log({target});\n    element.textContent = target;\n  }\n}\n\nfunction bindClick(element: HTMLElement, model: any): void {\n  const clickHandler = element.getAttribute(CLICK_PROP);\n  if (clickHandler) {\n    const fn = new Function('model', `with(model) { ${clickHandler} }`);\n    element.addEventListener('click', () => fn(model));\n  }\n}\n\nfunction bindPlaceholdersUsingVirtualDOM(vNode: VNode, model: any): void {\n  const {content, props, element, bindPathList} = vNode;\n  console.log('element', element);\n  if (content && content.includes('{') && content.includes('}') && element.nodeType === Node.TEXT_NODE) {\n\n    const updateText = () => {\n      let updatedText = content;\n      bindPathList.forEach(({path, placeholder}) => {\n        const value = path.split('.').reduce((obj, key) => obj[key], model);\n        updatedText = updatedText.replace(placeholder, value ?? '');\n      });\n      element.textContent = updatedText;\n    };\n\n    updateText();\n\n    // Odświeżanie tekstu na zmianę modelu\n    bindPathList.forEach(({path}) => {\n      createReactiveModel(model, (updatedPath) => {\n        if (updatedPath.startsWith(path.split('.')[0])) {\n          updateText();\n        }\n      });\n    });\n  }\n\n  // Przetwarzaj dzieci rekurencyjnie\n  vNode.children.forEach((childVNode) => {\n    if (typeof childVNode === 'object') {\n      bindPlaceholdersUsingVirtualDOM(childVNode, model);\n    }\n  });\n}\n\nexport function initializeAppWithVirtualDOM(instanceData: XInstanceData): void {\n  const {container, data: model} = instanceData;\n  const root = typeof container === 'string'\n    ? document.querySelector(container) as HTMLElement\n    : container;\n\n  const virtualDOM = createVirtualDOM(root);\n\n  console.log(virtualDOM);\n\n  const reactiveModel = createReactiveModel(model, (path) => {\n    updateHTML(root, virtualDOM, reactiveModel, path);\n  });\n\n  function processVNode(vNode: VNode, parentElement: HTMLElement): void {\n    const {props, element} = vNode;\n    // Obsługa @if\n    if (props[IF_PROP]) {\n      const condition = props[IF_PROP];\n      const isVisible = new Function('model', `with(model) { return ${condition}; }`)(model);\n\n      if (!isVisible) {\n        element.style.display = 'none';\n        return;\n      } else {\n        element.style.display = '';\n      }\n    }\n    if (props[MODEL_PROP]) {\n      bindXModel(parentElement, reactiveModel, props[MODEL_PROP]);\n    }\n\n    if (props[CLICK_PROP]) {\n      bindClick(parentElement, reactiveModel);\n    }\n\n    bindPlaceholdersUsingVirtualDOM(vNode, reactiveModel);\n\n    vNode.children.forEach((childVNode, index) => {\n      if (typeof childVNode === 'object') {\n        console.log(parentElement)\n        const childElement = parentElement.childNodes[index] as HTMLElement;\n        console.log(childElement,childVNode);\n        processVNode(childVNode, childElement);\n      }\n    });\n  }\n\n\n  processVNode(virtualDOM, root);\n}\n\n"],"names":["MODEL_PROP","CLICK_PROP","IF_PROP","getBindings","element","textBindings","getBindingsForText","attributeBindings","xModel","content","match","getChildren","child","createVirtualDOM","type","props","attr","children","bindings","createReactiveModel","model","onChange","createProxy","obj","path","target","key","value","updateHTML","root","vDom","childVNode","index","condition","input","bindPath","newContent","binding","bindXModel","e","newValue","keys","lastKey","targetObject","bindClick","clickHandler","fn","bindPlaceholdersUsingVirtualDOM","vNode","bindPathList","updateText","updatedText","placeholder","updatedPath","initializeAppWithVirtualDOM","instanceData","container","virtualDOM","reactiveModel","processVNode","parentElement","childElement"],"mappings":"+NAqBA,MAAMA,EAAa,SACbC,EAAa,SACbC,EAAU,MAEhB,SAASC,EAAYC,EAAgC,CAC7C,MAAAC,EAAeC,EAAmBF,EAAQ,WAAW,EACvD,GAAAA,EAAQ,WAAa,KAAK,UACrB,OAAAC,EAET,MAAME,EAAoB,CAAC,EACrBC,EAASJ,EAAQ,aAAaJ,CAAU,EAC9C,OAAIQ,GACFD,EAAkB,KAAK,CAAC,KAAMC,EAAQ,YAAaA,EAAO,EAErD,CAAC,GAAGH,EAAc,GAAGE,CAAiB,CAC/C,CAEA,SAASD,EAAmBG,EAAkC,CAC5D,OAAKA,EAGW,MAAM,KAAKA,EAAQ,SAAS,qBAAqB,CAAC,EACnD,IAAKC,IAAW,CAC7B,KAAMA,EAAM,CAAC,EAAE,KAAK,EACpB,YAAaA,EAAM,CAAC,CAAA,EACpB,EANO,CAAC,CAOZ,CAEA,SAASC,EAAYP,EAA+B,CAClD,OAAO,MAAM,KAAKA,EAAQ,UAAU,EAAE,IAAKQ,GAAU,CAC/C,GAAAA,EAAM,WAAa,KAAK,aAC1B,OAAOC,EAAiBD,CAAoB,EACnC,GAAAA,EAAM,WAAa,KAAK,UAC1B,MAAA,CACL,KAAM,OACN,QAASA,EAAM,YACf,MAAO,CAAC,EACR,SAAU,CAAC,EACX,QAASA,EACT,aAAcN,EAAmBM,EAAM,WAAW,CACpD,EACS,GAAAA,EAAM,WAAa,KAAK,aAC1B,MAAA,CACL,KAAM,UACN,QAASA,EAAM,YACf,MAAO,CAAC,EACR,SAAU,CAAC,EACX,QAASA,EACT,aAAcN,EAAmBM,EAAM,WAAW,CACpD,CACF,CACD,EAAE,OAAO,OAAO,CACnB,CAEC,SAASC,EAAiBT,EAA6B,CAChD,MAAAU,EAAOV,EAAQ,QAAQ,YAAY,EACnCW,EAAqB,CAAC,EACtBN,EAAUL,EAAQ,YAExB,MAAM,KAAKA,EAAQ,UAAU,EAAE,QAASY,GAAS,CACzCD,EAAAC,EAAK,IAAI,EAAIA,EAAK,KAAA,CACzB,EAEK,MAAAC,EAAWN,EAAYP,CAAO,EAC9Bc,EAAWd,EAAQ,WAAW,OAAS,CAAC,EAAID,EAAYC,CAAO,EACrE,MAAO,CAAC,KAAAU,EAAM,MAAAC,EAAO,SAAAE,EAAU,QAAAR,EAAS,QAAAL,EAAS,aAAcc,CAAQ,CACzE,CAEA,SAASC,EAAoBC,EAAYC,EAAuC,CAC9E,SAASC,EAAYC,EAAUC,EAAiB,GAAS,CAChD,OAAA,IAAI,MAAMD,EAAK,CACpB,IAAIE,EAAQC,EAAK,CACT,MAAAC,EAAQF,EAAOC,CAAG,EACxB,OAAI,OAAOC,GAAU,UAAYA,IAAU,KAClCL,EAAYK,EAAO,CAAC,GAAGH,EAAME,CAAa,CAAC,EAE7CC,CACT,EACA,IAAIF,EAAQC,EAAKC,EAAO,CACd,eAAA,IAAI,oBAAqB,CAAC,GAAGH,EAAME,CAAa,EAAE,KAAK,GAAG,EAAG,aAAcC,CAAK,EACxFF,EAAOC,CAAG,EAAIC,EACdN,EAAS,CAAC,GAAGG,EAAME,CAAa,EAAE,KAAK,GAAG,CAAC,EACpC,EAAA,CACT,CACD,CAAA,CAGH,OAAOJ,EAAYF,CAAK,CAC1B,CAEA,SAASQ,EAAWC,EAAmBC,EAAaV,EAAYI,EAAoB,CAClFM,EAAK,SAAS,QAAQ,CAACC,EAAYC,IAAU,CACvC,GAAAD,EAAW,MAAM7B,CAAO,EAAG,CACvB,MAAA+B,EAAYF,EAAW,MAAM7B,CAAO,EAG1C,GAFkB,IAAI,SAAS,QAAS,wBAAwB+B,CAAS,KAAK,EAAEb,CAAK,EAMxEW,EAAA,QAAQ,MAAM,QAAU,OAJrB,CACHA,EAAA,QAAQ,MAAM,QAAU,OACnC,MAAA,CAGF,CAKF,GAHIA,EAAW,SAAS,QACXH,EAAAC,EAAME,EAAYX,EAAOI,CAAI,EAEtCO,EAAW,MAAM/B,CAAU,IAAMwB,EAAM,CACzC,MAAMG,EAAQH,EAAK,MAAM,GAAG,EAAE,OAAO,CAACD,EAAKG,IAAQH,EAAIG,CAAG,EAAGN,CAAK,EAC9D,GAAAW,EAAW,QAAQ,UAAY,QAAS,CAC1C,MAAMG,EAAQH,EAAW,QACrBG,EAAM,QAAUP,IAClBO,EAAM,MAAQP,EAChB,MAEAI,EAAW,QAAQ,YAAcJ,EAEnC,MAAA,CAOE,GALA,CAACI,EAAW,aAAa,QAKzB,CADkBA,EAAW,aAAa,OAAQI,GAAaA,EAAS,OAASX,CAAI,EACtE,OACjB,OAEE,IAAAY,EAAaL,EAAW,SAAW,GAC5BA,EAAA,aAAa,QAASM,GAAY,CAC3C,MAAMV,EAAQU,EAAQ,KAAK,MAAM,GAAG,EAAE,OAAO,CAACd,EAAKG,IAAQH,EAAIG,CAAG,EAAGN,CAAK,EAC1EgB,EAAaA,EAAY,QAAQC,EAAQ,YAAaV,GAAS,EAAE,CAAA,CAClE,EACDI,EAAW,QAAQ,YAAcK,CAAA,CAClC,CACH,CAEA,SAASE,EAAWlC,EAAsBgB,EAAYI,EAAoB,CACxE,MAAMC,EAASD,EAAK,MAAM,GAAG,EAAE,OAAO,CAACD,EAAKG,IAAQH,EAAIG,CAAG,EAAGN,CAAK,EAE/D,GAAAhB,EAAQ,UAAY,QAAS,CAC/B,MAAM8B,EAAQ9B,EAGd8B,EAAM,MAAQT,EAGRS,EAAA,iBAAiB,QAAUK,GAAM,CAC/B,MAAAC,EAAYD,EAAE,OAA4B,MAC1CE,EAAOjB,EAAK,MAAM,GAAG,EACrBkB,EAAUD,EAAK,IAAI,EACnBE,EAAeF,EAAK,OAAO,CAAClB,EAAKG,IAAQH,EAAIG,CAAG,EAAGN,CAAK,EAC9DuB,EAAaD,CAAO,EAAIF,CAAA,CACzB,CAAA,MAGO,QAAA,IAAI,CAAC,OAAAf,EAAO,EACpBrB,EAAQ,YAAcqB,CAE1B,CAEA,SAASmB,EAAUxC,EAAsBgB,EAAkB,CACnD,MAAAyB,EAAezC,EAAQ,aAAaH,CAAU,EACpD,GAAI4C,EAAc,CAChB,MAAMC,EAAK,IAAI,SAAS,QAAS,iBAAiBD,CAAY,IAAI,EAClEzC,EAAQ,iBAAiB,QAAS,IAAM0C,EAAG1B,CAAK,CAAC,CAAA,CAErD,CAEA,SAAS2B,EAAgCC,EAAc5B,EAAkB,CACvE,KAAM,CAAC,QAAAX,EAAS,MAAAM,EAAO,QAAAX,EAAS,aAAA6C,CAAgB,EAAAD,EAEhD,GADQ,QAAA,IAAI,UAAW5C,CAAO,EAC1BK,GAAWA,EAAQ,SAAS,GAAG,GAAKA,EAAQ,SAAS,GAAG,GAAKL,EAAQ,WAAa,KAAK,UAAW,CAEpG,MAAM8C,EAAa,IAAM,CACvB,IAAIC,EAAc1C,EAClBwC,EAAa,QAAQ,CAAC,CAAC,KAAAzB,EAAM,YAAA4B,KAAiB,CAC5C,MAAMzB,EAAQH,EAAK,MAAM,GAAG,EAAE,OAAO,CAACD,EAAKG,IAAQH,EAAIG,CAAG,EAAGN,CAAK,EAClE+B,EAAcA,EAAY,QAAQC,EAAazB,GAAS,EAAE,CAAA,CAC3D,EACDvB,EAAQ,YAAc+C,CACxB,EAEWD,EAAA,EAGXD,EAAa,QAAQ,CAAC,CAAC,KAAAzB,KAAU,CACXL,EAAAC,EAAQiC,GAAgB,CACtCA,EAAY,WAAW7B,EAAK,MAAM,GAAG,EAAE,CAAC,CAAC,GAChC0B,EAAA,CACb,CACD,CAAA,CACF,CAAA,CAIGF,EAAA,SAAS,QAASjB,GAAe,CACjC,OAAOA,GAAe,UACxBgB,EAAgChB,EAAYX,CAAK,CACnD,CACD,CACH,CAEO,SAASkC,EAA4BC,EAAmC,CAC7E,KAAM,CAAC,UAAAC,EAAW,KAAMpC,CAAS,EAAAmC,EAC3B1B,EAAO,OAAO2B,GAAc,SAC9B,SAAS,cAAcA,CAAS,EAChCA,EAEEC,EAAa5C,EAAiBgB,CAAI,EAExC,QAAQ,IAAI4B,CAAU,EAEtB,MAAMC,EAAgBvC,EAAoBC,EAAQI,GAAS,CAC9CI,EAAAC,EAAM4B,EAAYC,EAAelC,CAAI,CAAA,CACjD,EAEQ,SAAAmC,EAAaX,EAAcY,EAAkC,CAC9D,KAAA,CAAC,MAAA7C,EAAO,QAAAX,CAAA,EAAW4C,EAErB,GAAAjC,EAAMb,CAAO,EAAG,CACZ,MAAA+B,EAAYlB,EAAMb,CAAO,EAG/B,GAFkB,IAAI,SAAS,QAAS,wBAAwB+B,CAAS,KAAK,EAAEb,CAAK,EAMnFhB,EAAQ,MAAM,QAAU,OAJV,CACdA,EAAQ,MAAM,QAAU,OACxB,MAAA,CAGF,CAEEW,EAAMf,CAAU,GAClBsC,EAAWsB,EAAeF,EAAe3C,EAAMf,CAAU,CAAC,EAGxDe,EAAMd,CAAU,GAClB2C,EAAUgB,EAAeF,CAAa,EAGxCX,EAAgCC,EAAOU,CAAa,EAEpDV,EAAM,SAAS,QAAQ,CAACjB,EAAYC,IAAU,CACxC,GAAA,OAAOD,GAAe,SAAU,CAClC,QAAQ,IAAI6B,CAAa,EACnB,MAAAC,EAAeD,EAAc,WAAW5B,CAAK,EAC3C,QAAA,IAAI6B,EAAa9B,CAAU,EACnC4B,EAAa5B,EAAY8B,CAAY,CAAA,CACvC,CACD,CAAA,CAIHF,EAAaF,EAAY5B,CAAI,CAC/B"}