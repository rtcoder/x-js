{"version":3,"file":"index.es.js","sources":["../src/main.ts"],"sourcesContent":["type MixedObject = {\n  [key: string]: any;\n}\ntype XInstanceData = {\n  container: HTMLElement | string;\n  data: MixedObject;\n  methods?: MixedObject;\n}\ntype Binding = {\n  path: string,\n  placeholder: string | null,\n};\ntype Bindings = Binding[];\ntype ForConfig = {\n  item: string; // Nazwa zmiennej iteracyjnej (np. 'item')\n  list: string; // Wyrażenie reprezentujące listę w modelu (np. 'items' lub 'model.items')\n}\ntype VNode = {\n  type: string;\n  props: MixedObject;\n  content: string | null;\n  children: VNode[];\n  element: HTMLElement;\n  bindPathList: Bindings;\n  forConfig: ForConfig | null;\n}\nconst MODEL_PROP = '@model';\nconst CLICK_PROP = '@click';\nconst IF_PROP = '@if';\nconst FOR_PROP = '@for';\n\nfunction getBindings(element: HTMLElement): Bindings {\n  const attributeBindings: Bindings = [];\n  const xFor = element.getAttribute(FOR_PROP);\n  if (xFor) {\n    const [, list] = xFor.split(' in ');\n    attributeBindings.push({path: list, placeholder: null});\n    return attributeBindings;\n  }\n  if (element.childNodes.length) {\n    return [];\n  }\n  const textBindings = getBindingsForText(element.textContent);\n  if (element.nodeType === Node.TEXT_NODE) {\n    return textBindings;\n  }\n  const xModel = element.getAttribute(MODEL_PROP);\n  if (xModel) {\n    attributeBindings.push({path: xModel, placeholder: xModel});\n  }\n  return [...textBindings, ...attributeBindings];\n}\n\nfunction getBindingsForText(content: string | null): Bindings {\n  if (!content) {\n    return [];\n  }\n  const matches = Array.from(content.matchAll(/\\{\\s*([\\w.]+)\\s*\\}/g));\n  return matches.map((match) => ({\n    path: match[1].trim(),\n    placeholder: match[0],\n  }));\n}\n\nfunction getChildren(element: HTMLElement): VNode[] {\n  return Array.from(element.childNodes).map((child) => {\n    if (child.nodeType === Node.ELEMENT_NODE) {\n      return createVirtualDOM(child as HTMLElement);\n    } else if (child.nodeType === Node.TEXT_NODE) {\n      return {\n        type: 'text',\n        content: child.textContent,\n        props: {},\n        children: [],\n        element: child,\n        bindPathList: getBindingsForText(child.textContent),\n        forConfig: null,\n      };\n    } else if (child.nodeType === Node.COMMENT_NODE) {\n      return {\n        type: 'comment',\n        content: child.textContent,\n        props: {},\n        children: [],\n        element: child,\n        bindPathList: getBindingsForText(child.textContent),\n        forConfig: null,\n      };\n    }\n  }).filter(Boolean) as VNode[];\n}\n\nfunction parseForDirective(forValue: string): ForConfig {\n  const match = forValue.match(/(\\w+)\\s+in\\s+(.+)/);\n  if (!match) {\n    throw new Error(`Invalid @for syntax: ${forValue}`);\n  }\n  return {item: match[1], list: match[2]};\n}\n\nfunction createVirtualDOM(element: HTMLElement): VNode {\n  const type = element.tagName.toLowerCase();\n  const props: MixedObject = {};\n  const content = element.textContent;\n\n  Array.from(element.attributes).forEach((attr) => {\n    props[attr.name] = attr.value;\n  });\n// Obsługa @for\n  const forDirective = props[FOR_PROP];\n  let forConfig = null;\n  if (forDirective) {\n    forConfig = parseForDirective(forDirective);\n  }\n  const children = getChildren(element);\n  const bindings = getBindings(element);\n  element.removeAttribute(MODEL_PROP);\n  element.removeAttribute(IF_PROP);\n  element.removeAttribute(FOR_PROP);\n  element.removeAttribute(CLICK_PROP);\n  return {\n    type,\n    props,\n    children,\n    content,\n    element,\n    bindPathList: bindings,\n    forConfig,\n  };\n}\n\nfunction createReactiveModel(model: any, onChange: (path: string) => void): any {\n  function createProxy(obj: any, path: string[] = []): any {\n    if (Array.isArray(obj)) {\n      // Obsługa tablic\n      return new Proxy(obj, {\n        get(target, key: any) {\n          console.log(path);\n          console.log(key);\n          console.log('Tablica odczytana:', [...path, key as string].join('.'));\n          if (typeof key === 'string' && ['push', 'pop', 'splice', 'shift', 'unshift'].includes(key)) {\n            return (...args: any[]) => {\n              const result = Array.prototype[key as any].apply(target, args) as any;\n              // Powiadom o zmianach w tablicy\n              onChange(path.join('.'));\n              return result;\n            };\n          }\n\n          const value = target[key as any];\n          if (typeof value === 'object' && value !== null) {\n            return createProxy(value, [...path, key as string]);\n          }\n          return value;\n        },\n        set(target, key, value) {\n          console.log('Tablica zmieniona:', [...path, key as string].join('.'), 'Nowa wartość:', value);\n          target[key as any] = value;\n          onChange(path.join('.'));\n          return true;\n        },\n      });\n    } else if (typeof obj === 'object' && obj !== null) {\n      // Obsługa obiektów\n      return new Proxy(obj, {\n        get(target, key) {\n          const value = target[key];\n          if (typeof value === 'object' && value !== null) {\n            return createProxy(value, [...path, key as string]);\n          }\n          return value;\n        },\n        set(target, key, value) {\n          console.log('Model zmieniony:', [...path, key as string].join('.'), 'Nowa wartość:', value);\n          target[key] = value;\n          onChange([...path, key as string].join('.'));\n          return true;\n        },\n      });\n    }\n    return obj;\n  }\n\n  return createProxy(model);\n}\n\n\nfunction updateHTML(root: HTMLElement, vDom: VNode, model: any, path: string): void {\n  vDom.children.forEach((childVNode, index) => {\n    if (childVNode.props[IF_PROP]) {\n      const condition = childVNode.props[IF_PROP];\n      const isVisible = new Function('model', `with(model) { return ${condition}; }`)(model);\n\n      if (!isVisible) {\n        childVNode.element.style.display = 'none';\n        return;\n      } else {\n        childVNode.element.style.display = '';\n      }\n    }\n    if (childVNode.children.length) {\n      updateHTML(root, childVNode, model, path);\n    }\n    if (childVNode.props[MODEL_PROP] === path) {\n      const value = path.split('.').reduce((obj, key) => obj[key], model);\n      if (childVNode.element.tagName === 'INPUT') {\n        const input = childVNode.element as HTMLInputElement;\n        if (input.value !== value) {\n          input.value = value;\n        }\n      } else {\n        childVNode.element.textContent = value;\n      }\n      return;\n    }\n    if (!childVNode.bindPathList.length) {\n      return;\n    }\n\n    const foundBindings = childVNode.bindPathList.filter((bindPath) => bindPath.path === path);\n    if (!foundBindings.length) {\n      return;\n    }\n    let newContent = childVNode.content || '';\n    childVNode.bindPathList\n      .filter((b) => !!b.placeholder)\n      .forEach((binding) => {\n        const value = binding.path.split('.').reduce((obj, key) => obj[key], model);\n        newContent = newContent!.replace(binding.placeholder!, value ?? '');\n      });\n    childVNode.element.textContent = newContent;\n  });\n}\n\nfunction bindXModel(element: HTMLElement, model: any, path: string): void {\n  const target = path.split('.').reduce((obj, key) => obj[key], model);\n\n  if (element.tagName === 'INPUT') {\n    const input = element as HTMLInputElement;\n\n    // Ustaw wartość początkową\n    input.value = target;\n\n    // Zdarzenie na zmianę wartości\n    input.addEventListener('input', (e) => {\n      const newValue = (e.target as HTMLInputElement).value;\n      const keys = path.split('.');\n      const lastKey = keys.pop()!;\n      const targetObject = keys.reduce((obj, key) => obj[key], model);\n      targetObject[lastKey] = newValue; // To wywoła Proxy\n    });\n  } else {\n    // Ustaw tekst początkowy\n    element.textContent = target;\n  }\n}\n\nfunction bindClick(element: HTMLElement, vNode: VNode, model: any): void {\n  const clickHandler = vNode.props[CLICK_PROP];\n  if (clickHandler) {\n    const fn = new Function('model', `with(model) { ${clickHandler} }`);\n    element.addEventListener('click', () => fn(model));\n  }\n}\n\nfunction bindPlaceholdersUsingVirtualDOM(vNode: VNode, model: any): void {\n  const {content, props, element, bindPathList, forConfig} = vNode;\n\n  if (forConfig) {\n    return;\n  }\n  if (content && content.includes('{') && content.includes('}') && element.nodeType === Node.TEXT_NODE) {\n\n    const updateText = () => {\n      let updatedText = content;\n      bindPathList\n        .filter((b) => !!b.placeholder)\n        .forEach(({path, placeholder}) => {\n          const value = path.split('.').reduce((obj, key) => obj[key], model);\n          updatedText = updatedText.replace(placeholder!, value ?? '');\n        });\n      element.textContent = updatedText;\n    };\n\n    updateText();\n\n    // Odświeżanie tekstu na zmianę modelu\n    bindPathList.forEach(({path}) => {\n      createReactiveModel(model, (updatedPath) => {\n        if (updatedPath.startsWith(path.split('.')[0])) {\n          updateText();\n        }\n      });\n    });\n  }\n\n  // Przetwarzaj dzieci rekurencyjnie\n  vNode.children.forEach((childVNode) => {\n    if (typeof childVNode === 'object') {\n      bindPlaceholdersUsingVirtualDOM(childVNode, model);\n    }\n  });\n}\n\nexport function initializeAppWithVirtualDOM(instanceData: XInstanceData): void {\n  const {container, data} = instanceData;\n  const root = typeof container === 'string'\n    ? document.querySelector(container) as HTMLElement\n    : container;\n\n  const virtualDOM = createVirtualDOM(root);\n\n  console.log(virtualDOM);\n\n  const reactiveModel = createReactiveModel(data, (path) => {\n    updateHTML(root, virtualDOM, reactiveModel, path);\n  });\n\n  function processVNode(vNode: VNode, parentElement: HTMLElement, model: any): void {\n    const {props, element, forConfig} = vNode;\n    // Obsługa @if\n    if (props[IF_PROP]) {\n      const condition = props[IF_PROP];\n      const isVisible = new Function('model', `with(model) { return ${condition}; }`)(model);\n\n      if (!isVisible) {\n        element.style.display = 'none';\n        return;\n      } else {\n        element.style.display = '';\n      }\n    }\n    // Obsługa @for\n    if (forConfig) {\n      const {item, list} = forConfig;\n      const fn = new Function('model', `with(model) { return ${list}; }`);\n      const dataList = fn(model);\n\n      // Usuń oryginalny element z DOM (będzie zastąpiony klonami)\n      element.style.display = 'none';\n      const fragment = document.createDocumentFragment();\n      dataList.forEach((dataItem: any) => {\n        const localModel = {[item]: dataItem};\n\n        // Klonuj element\n        const clonedElement = element.cloneNode(true) as HTMLElement;\n        clonedElement.removeAttribute('@for');\n        clonedElement.style.display = ''; // Odsłoń klon\n\n        // Stwórz wirtualny DOM dla klonu\n        const clonedVNode = createVirtualDOM(clonedElement);\n\n        // Przetwarzaj klon z lokalnym modelem\n        processVNode(clonedVNode, clonedElement, localModel);\n\n        fragment.appendChild(clonedElement);\n      });\n\n      parentElement.parentNode?.replaceChild(fragment, element);\n      return;\n    }\n    if (props[MODEL_PROP]) {\n      bindXModel(parentElement, reactiveModel, props[MODEL_PROP]);\n    }\n\n    if (props[CLICK_PROP]) {\n      bindClick(parentElement, vNode, reactiveModel);\n    }\n\n    bindPlaceholdersUsingVirtualDOM(vNode, model);\n\n    vNode.children.forEach((childVNode, index) => {\n      if (typeof childVNode === 'object') {\n        const childElement = parentElement.childNodes[index] as HTMLElement;\n        processVNode(childVNode, childElement, model);\n      }\n    });\n  }\n\n\n  processVNode(virtualDOM, root, data);\n}\n\n"],"names":["MODEL_PROP","CLICK_PROP","IF_PROP","FOR_PROP","getBindings","element","attributeBindings","xFor","list","textBindings","getBindingsForText","xModel","content","match","getChildren","child","createVirtualDOM","parseForDirective","forValue","type","props","attr","forDirective","forConfig","children","bindings","createReactiveModel","model","onChange","createProxy","obj","path","target","key","args","result","value","updateHTML","root","vDom","childVNode","index","condition","input","bindPath","newContent","b","binding","bindXModel","e","newValue","keys","lastKey","targetObject","bindClick","vNode","clickHandler","fn","bindPlaceholdersUsingVirtualDOM","bindPathList","updateText","updatedText","placeholder","updatedPath","initializeAppWithVirtualDOM","instanceData","container","data","virtualDOM","reactiveModel","processVNode","parentElement","_a","item","dataList","fragment","dataItem","localModel","clonedElement","clonedVNode","childElement"],"mappings":"AA0BA,MAAMA,IAAa,UACbC,IAAa,UACbC,IAAU,OACVC,IAAW;AAEjB,SAASC,EAAYC,GAAgC;AACnD,QAAMC,IAA8B,CAAC,GAC/BC,IAAOF,EAAQ,aAAaF,CAAQ;AAC1C,MAAII,GAAM;AACR,UAAM,CAAG,EAAAC,CAAI,IAAID,EAAK,MAAM,MAAM;AAClC,WAAAD,EAAkB,KAAK,EAAC,MAAME,GAAM,aAAa,MAAK,GAC/CF;AAAA,EAAA;AAEL,MAAAD,EAAQ,WAAW;AACrB,WAAO,CAAC;AAEJ,QAAAI,IAAeC,EAAmBL,EAAQ,WAAW;AACvD,MAAAA,EAAQ,aAAa,KAAK;AACrB,WAAAI;AAEH,QAAAE,IAASN,EAAQ,aAAaL,CAAU;AAC9C,SAAIW,KACFL,EAAkB,KAAK,EAAC,MAAMK,GAAQ,aAAaA,GAAO,GAErD,CAAC,GAAGF,GAAc,GAAGH,CAAiB;AAC/C;AAEA,SAASI,EAAmBE,GAAkC;AAC5D,SAAKA,IAGW,MAAM,KAAKA,EAAQ,SAAS,qBAAqB,CAAC,EACnD,IAAI,CAACC,OAAW;AAAA,IAC7B,MAAMA,EAAM,CAAC,EAAE,KAAK;AAAA,IACpB,aAAaA,EAAM,CAAC;AAAA,EAAA,EACpB,IANO,CAAC;AAOZ;AAEA,SAASC,EAAYT,GAA+B;AAClD,SAAO,MAAM,KAAKA,EAAQ,UAAU,EAAE,IAAI,CAACU,MAAU;AAC/C,QAAAA,EAAM,aAAa,KAAK;AAC1B,aAAOC,EAAiBD,CAAoB;AACnC,QAAAA,EAAM,aAAa,KAAK;AAC1B,aAAA;AAAA,QACL,MAAM;AAAA,QACN,SAASA,EAAM;AAAA,QACf,OAAO,CAAC;AAAA,QACR,UAAU,CAAC;AAAA,QACX,SAASA;AAAA,QACT,cAAcL,EAAmBK,EAAM,WAAW;AAAA,QAClD,WAAW;AAAA,MACb;AACS,QAAAA,EAAM,aAAa,KAAK;AAC1B,aAAA;AAAA,QACL,MAAM;AAAA,QACN,SAASA,EAAM;AAAA,QACf,OAAO,CAAC;AAAA,QACR,UAAU,CAAC;AAAA,QACX,SAASA;AAAA,QACT,cAAcL,EAAmBK,EAAM,WAAW;AAAA,QAClD,WAAW;AAAA,MACb;AAAA,EACF,CACD,EAAE,OAAO,OAAO;AACnB;AAEA,SAASE,EAAkBC,GAA6B;AAChD,QAAAL,IAAQK,EAAS,MAAM,mBAAmB;AAChD,MAAI,CAACL;AACH,UAAM,IAAI,MAAM,wBAAwBK,CAAQ,EAAE;AAE7C,SAAA,EAAC,MAAML,EAAM,CAAC,GAAG,MAAMA,EAAM,CAAC,EAAC;AACxC;AAEA,SAASG,EAAiBX,GAA6B;AAC/C,QAAAc,IAAOd,EAAQ,QAAQ,YAAY,GACnCe,IAAqB,CAAC,GACtBR,IAAUP,EAAQ;AAExB,QAAM,KAAKA,EAAQ,UAAU,EAAE,QAAQ,CAACgB,MAAS;AACzC,IAAAD,EAAAC,EAAK,IAAI,IAAIA,EAAK;AAAA,EAAA,CACzB;AAEK,QAAAC,IAAeF,EAAMjB,CAAQ;AACnC,MAAIoB,IAAY;AAChB,EAAID,MACFC,IAAYN,EAAkBK,CAAY;AAEtC,QAAAE,IAAWV,EAAYT,CAAO,GAC9BoB,IAAWrB,EAAYC,CAAO;AACpC,SAAAA,EAAQ,gBAAgBL,CAAU,GAClCK,EAAQ,gBAAgBH,CAAO,GAC/BG,EAAQ,gBAAgBF,CAAQ,GAChCE,EAAQ,gBAAgBJ,CAAU,GAC3B;AAAA,IACL,MAAAkB;AAAA,IACA,OAAAC;AAAA,IACA,UAAAI;AAAA,IACA,SAAAZ;AAAA,IACA,SAAAP;AAAA,IACA,cAAcoB;AAAA,IACd,WAAAF;AAAA,EACF;AACF;AAEA,SAASG,EAAoBC,GAAYC,GAAuC;AAC9E,WAASC,EAAYC,GAAUC,IAAiB,IAAS;AACnD,WAAA,MAAM,QAAQD,CAAG,IAEZ,IAAI,MAAMA,GAAK;AAAA,MACpB,IAAIE,GAAQC,GAAU;AAIpB,YAHA,QAAQ,IAAIF,CAAI,GAChB,QAAQ,IAAIE,CAAG,GACP,QAAA,IAAI,sBAAsB,CAAC,GAAGF,GAAME,CAAa,EAAE,KAAK,GAAG,CAAC,GAChE,OAAOA,KAAQ,YAAY,CAAC,QAAQ,OAAO,UAAU,SAAS,SAAS,EAAE,SAASA,CAAG;AACvF,iBAAO,IAAIC,MAAgB;AACzB,kBAAMC,IAAS,MAAM,UAAUF,CAAU,EAAE,MAAMD,GAAQE,CAAI;AAEpD,mBAAAN,EAAAG,EAAK,KAAK,GAAG,CAAC,GAChBI;AAAA,UACT;AAGI,cAAAC,IAAQJ,EAAOC,CAAU;AAC/B,eAAI,OAAOG,KAAU,YAAYA,MAAU,OAClCP,EAAYO,GAAO,CAAC,GAAGL,GAAME,CAAa,CAAC,IAE7CG;AAAA,MACT;AAAA,MACA,IAAIJ,GAAQC,GAAKG,GAAO;AACd,uBAAA,IAAI,sBAAsB,CAAC,GAAGL,GAAME,CAAa,EAAE,KAAK,GAAG,GAAG,iBAAiBG,CAAK,GAC5FJ,EAAOC,CAAU,IAAIG,GACZR,EAAAG,EAAK,KAAK,GAAG,CAAC,GAChB;AAAA,MAAA;AAAA,IACT,CACD,IACQ,OAAOD,KAAQ,YAAYA,MAAQ,OAErC,IAAI,MAAMA,GAAK;AAAA,MACpB,IAAIE,GAAQC,GAAK;AACT,cAAAG,IAAQJ,EAAOC,CAAG;AACxB,eAAI,OAAOG,KAAU,YAAYA,MAAU,OAClCP,EAAYO,GAAO,CAAC,GAAGL,GAAME,CAAa,CAAC,IAE7CG;AAAA,MACT;AAAA,MACA,IAAIJ,GAAQC,GAAKG,GAAO;AACd,uBAAA,IAAI,oBAAoB,CAAC,GAAGL,GAAME,CAAa,EAAE,KAAK,GAAG,GAAG,iBAAiBG,CAAK,GAC1FJ,EAAOC,CAAG,IAAIG,GACdR,EAAS,CAAC,GAAGG,GAAME,CAAa,EAAE,KAAK,GAAG,CAAC,GACpC;AAAA,MAAA;AAAA,IACT,CACD,IAEIH;AAAA,EAAA;AAGT,SAAOD,EAAYF,CAAK;AAC1B;AAGA,SAASU,EAAWC,GAAmBC,GAAaZ,GAAYI,GAAoB;AAClF,EAAAQ,EAAK,SAAS,QAAQ,CAACC,GAAYC,MAAU;AACvC,QAAAD,EAAW,MAAMtC,CAAO,GAAG;AACvB,YAAAwC,IAAYF,EAAW,MAAMtC,CAAO;AAG1C,UAFkB,IAAI,SAAS,SAAS,wBAAwBwC,CAAS,KAAK,EAAEf,CAAK;AAMxE,QAAAa,EAAA,QAAQ,MAAM,UAAU;AAAA,WAJrB;AACH,QAAAA,EAAA,QAAQ,MAAM,UAAU;AACnC;AAAA,MAAA;AAAA,IAGF;AAKF,QAHIA,EAAW,SAAS,UACXH,EAAAC,GAAME,GAAYb,GAAOI,CAAI,GAEtCS,EAAW,MAAMxC,CAAU,MAAM+B,GAAM;AACzC,YAAMK,IAAQL,EAAK,MAAM,GAAG,EAAE,OAAO,CAACD,GAAKG,MAAQH,EAAIG,CAAG,GAAGN,CAAK;AAC9D,UAAAa,EAAW,QAAQ,YAAY,SAAS;AAC1C,cAAMG,IAAQH,EAAW;AACrB,QAAAG,EAAM,UAAUP,MAClBO,EAAM,QAAQP;AAAA,MAChB;AAEA,QAAAI,EAAW,QAAQ,cAAcJ;AAEnC;AAAA,IAAA;AAOE,QALA,CAACI,EAAW,aAAa,UAKzB,CADkBA,EAAW,aAAa,OAAO,CAACI,MAAaA,EAAS,SAASb,CAAI,EACtE;AACjB;AAEE,QAAAc,IAAaL,EAAW,WAAW;AAC5B,IAAAA,EAAA,aACR,OAAO,CAACM,MAAM,CAAC,CAACA,EAAE,WAAW,EAC7B,QAAQ,CAACC,MAAY;AACpB,YAAMX,IAAQW,EAAQ,KAAK,MAAM,GAAG,EAAE,OAAO,CAACjB,GAAKG,MAAQH,EAAIG,CAAG,GAAGN,CAAK;AAC1E,MAAAkB,IAAaA,EAAY,QAAQE,EAAQ,aAAcX,KAAS,EAAE;AAAA,IAAA,CACnE,GACHI,EAAW,QAAQ,cAAcK;AAAA,EAAA,CAClC;AACH;AAEA,SAASG,EAAW3C,GAAsBsB,GAAYI,GAAoB;AACxE,QAAMC,IAASD,EAAK,MAAM,GAAG,EAAE,OAAO,CAACD,GAAKG,MAAQH,EAAIG,CAAG,GAAGN,CAAK;AAE/D,MAAAtB,EAAQ,YAAY,SAAS;AAC/B,UAAMsC,IAAQtC;AAGd,IAAAsC,EAAM,QAAQX,GAGRW,EAAA,iBAAiB,SAAS,CAACM,MAAM;AAC/B,YAAAC,IAAYD,EAAE,OAA4B,OAC1CE,IAAOpB,EAAK,MAAM,GAAG,GACrBqB,IAAUD,EAAK,IAAI,GACnBE,IAAeF,EAAK,OAAO,CAACrB,GAAKG,MAAQH,EAAIG,CAAG,GAAGN,CAAK;AAC9D,MAAA0B,EAAaD,CAAO,IAAIF;AAAA,IAAA,CACzB;AAAA,EAAA;AAGD,IAAA7C,EAAQ,cAAc2B;AAE1B;AAEA,SAASsB,EAAUjD,GAAsBkD,GAAc5B,GAAkB;AACjE,QAAA6B,IAAeD,EAAM,MAAMtD,CAAU;AAC3C,MAAIuD,GAAc;AAChB,UAAMC,IAAK,IAAI,SAAS,SAAS,iBAAiBD,CAAY,IAAI;AAClE,IAAAnD,EAAQ,iBAAiB,SAAS,MAAMoD,EAAG9B,CAAK,CAAC;AAAA,EAAA;AAErD;AAEA,SAAS+B,EAAgCH,GAAc5B,GAAkB;AACvE,QAAM,EAAC,SAAAf,GAAS,OAAAQ,GAAO,SAAAf,GAAS,cAAAsD,GAAc,WAAApC,MAAagC;AAE3D,MAAI,CAAAhC,GAGJ;AAAA,QAAIX,KAAWA,EAAQ,SAAS,GAAG,KAAKA,EAAQ,SAAS,GAAG,KAAKP,EAAQ,aAAa,KAAK,WAAW;AAEpG,YAAMuD,IAAa,MAAM;AACvB,YAAIC,IAAcjD;AAClB,QAAA+C,EACG,OAAO,CAACb,MAAM,CAAC,CAACA,EAAE,WAAW,EAC7B,QAAQ,CAAC,EAAC,MAAAf,GAAM,aAAA+B,QAAiB;AAChC,gBAAM1B,IAAQL,EAAK,MAAM,GAAG,EAAE,OAAO,CAACD,GAAKG,MAAQH,EAAIG,CAAG,GAAGN,CAAK;AAClE,UAAAkC,IAAcA,EAAY,QAAQC,GAAc1B,KAAS,EAAE;AAAA,QAAA,CAC5D,GACH/B,EAAQ,cAAcwD;AAAA,MACxB;AAEW,MAAAD,EAAA,GAGXD,EAAa,QAAQ,CAAC,EAAC,MAAA5B,QAAU;AACX,QAAAL,EAAAC,GAAO,CAACoC,MAAgB;AACtC,UAAAA,EAAY,WAAWhC,EAAK,MAAM,GAAG,EAAE,CAAC,CAAC,KAChC6B,EAAA;AAAA,QACb,CACD;AAAA,MAAA,CACF;AAAA,IAAA;AAIG,IAAAL,EAAA,SAAS,QAAQ,CAACf,MAAe;AACjC,MAAA,OAAOA,KAAe,YACxBkB,EAAgClB,GAAYb,CAAK;AAAA,IACnD,CACD;AAAA;AACH;AAEO,SAASqC,EAA4BC,GAAmC;AACvE,QAAA,EAAC,WAAAC,GAAW,MAAAC,EAAA,IAAQF,GACpB3B,IAAO,OAAO4B,KAAc,WAC9B,SAAS,cAAcA,CAAS,IAChCA,GAEEE,IAAapD,EAAiBsB,CAAI;AAExC,UAAQ,IAAI8B,CAAU;AAEtB,QAAMC,IAAgB3C,EAAoByC,GAAM,CAACpC,MAAS;AAC7C,IAAAM,EAAAC,GAAM8B,GAAYC,GAAetC,CAAI;AAAA,EAAA,CACjD;AAEQ,WAAAuC,EAAaf,GAAcgB,GAA4B5C,GAAkB;AApSpF,QAAA6C;AAqSI,UAAM,EAAC,OAAApD,GAAO,SAAAf,GAAS,WAAAkB,EAAa,IAAAgC;AAEhC,QAAAnC,EAAMlB,CAAO,GAAG;AACZ,YAAAwC,IAAYtB,EAAMlB,CAAO;AAG/B,UAFkB,IAAI,SAAS,SAAS,wBAAwBwC,CAAS,KAAK,EAAEf,CAAK;AAMnF,QAAAtB,EAAQ,MAAM,UAAU;AAAA,WAJV;AACd,QAAAA,EAAQ,MAAM,UAAU;AACxB;AAAA,MAAA;AAAA,IAGF;AAGF,QAAIkB,GAAW;AACP,YAAA,EAAC,MAAAkD,GAAM,MAAAjE,EAAA,IAAQe,GAEfmD,IADK,IAAI,SAAS,SAAS,wBAAwBlE,CAAI,KAAK,EAC9CmB,CAAK;AAGzB,MAAAtB,EAAQ,MAAM,UAAU;AAClB,YAAAsE,IAAW,SAAS,uBAAuB;AACxC,MAAAD,EAAA,QAAQ,CAACE,MAAkB;AAClC,cAAMC,IAAa,EAAC,CAACJ,CAAI,GAAGG,EAAQ,GAG9BE,IAAgBzE,EAAQ,UAAU,EAAI;AAC5C,QAAAyE,EAAc,gBAAgB,MAAM,GACpCA,EAAc,MAAM,UAAU;AAGxB,cAAAC,IAAc/D,EAAiB8D,CAAa;AAGrC,QAAAR,EAAAS,GAAaD,GAAeD,CAAU,GAEnDF,EAAS,YAAYG,CAAa;AAAA,MAAA,CACnC,IAEaN,IAAAD,EAAA,eAAA,QAAAC,EAAY,aAAaG,GAAUtE;AACjD;AAAA,IAAA;AAEE,IAAAe,EAAMpB,CAAU,KAClBgD,EAAWuB,GAAeF,GAAejD,EAAMpB,CAAU,CAAC,GAGxDoB,EAAMnB,CAAU,KACRqD,EAAAiB,GAAehB,GAAOc,CAAa,GAG/CX,EAAgCH,GAAO5B,CAAK,GAE5C4B,EAAM,SAAS,QAAQ,CAACf,GAAYC,MAAU;AACxC,UAAA,OAAOD,KAAe,UAAU;AAC5B,cAAAwC,IAAeT,EAAc,WAAW9B,CAAK;AACtC,QAAA6B,EAAA9B,GAAYwC,GAAcrD,CAAK;AAAA,MAAA;AAAA,IAC9C,CACD;AAAA,EAAA;AAIU,EAAA2C,EAAAF,GAAY9B,GAAM6B,CAAI;AACrC;"}