{"version":3,"file":"index.es.js","sources":["../src/main.ts"],"sourcesContent":["import {VNode} from './types/v-node.ts';\n\nfunction createReactiveModel(model: any, onChange: (path: string) => void): any {\n  function createProxy(obj: any, path: string[] = []): any {\n    return new Proxy(obj, {\n      get(target, key) {\n        const value = target[key];\n        if (typeof value === 'object' && value !== null) {\n          return createProxy(value, [...path, key as string]);\n        }\n        return value;\n      },\n      set(target, key, value) {\n        target[key] = value;\n        onChange([...path, key as string].join('.'));\n        return true;\n      },\n    });\n  }\n\n  return createProxy(model);\n}\nfunction updateHTML(root: HTMLElement, model: any, path: string): void {\n  const elements = [\n      ...root.querySelectorAll(`[data-bind-path=\"${path}\"]`).values(),\n  ];\n\n  elements.forEach((element) => {\n    if (element.tagName === 'INPUT') {\n      const input = element as HTMLInputElement;\n      const value = path.split('.').reduce((obj, key) => obj[key], model);\n      if (input.value !== value) {\n        input.value = value;\n      }\n    } else {\n      const textContent = element.textContent || '';\n      if (textContent.includes('{') && textContent.includes('}')) {\n        bindPlaceholders(element as HTMLElement, model);\n      } else {\n        element.textContent = path.split('.').reduce((obj, key) => obj[key], model);\n      }\n    }\n  });\n}\n\n\nexport function render(vNode: VNode): HTMLElement {\n  const element = document.createElement(vNode.type);\n  if (vNode.content) {\n    element.textContent = vNode.content;\n  }\n  // Ustawienie atrybutów i zdarzeń\n  for (const [key, value] of Object.entries(vNode.props)) {\n    if (key.startsWith('on') && typeof value === 'function') {\n      const eventType = key.slice(2).toLowerCase();\n      element.addEventListener(eventType, value);\n    } else {\n      (element as any)[key] = value; // np. element.value\n    }\n  }\n\n  // Renderowanie dzieci\n  vNode.children.forEach((child) => {\n    const childElement = typeof child === 'string'\n      ? document.createTextNode(child)\n      : render(child);\n    element.appendChild(childElement);\n  });\n\n  return element;\n}\n\nexport function updateElement(parent: HTMLElement, newVNode: VNode, oldVNode?: VNode, index = 0): void {\n  const child = parent.childNodes[index];\n\n  // Jeśli stary węzeł nie istnieje, dodaj nowy\n  if (!oldVNode) {\n    parent.appendChild(render(newVNode));\n    return;\n  }\n\n  // Jeśli nowy węzeł nie istnieje, usuń stary\n  if (!newVNode) {\n    if (child) parent.removeChild(child);\n    return;\n  }\n\n  // Jeśli typ węzłów różni się, zastąp stary nowym\n  if (newVNode.type !== oldVNode.type) {\n    parent.replaceChild(render(newVNode), child!);\n    return;\n  }\n\n  // Aktualizuj atrybuty\n  const element = child as HTMLElement;\n  for (const [key, value] of Object.entries(newVNode.props)) {\n    if (key.startsWith('on')) {  // Zdarzenia są stałe\n      continue;\n    }\n\n    if ((element as any)[key] !== value) {\n      (element as any)[key] = value;\n    }\n  }\n\n  // Usuwanie starych atrybutów\n  for (const key of Object.keys(oldVNode.props)) {\n    if (!(key in newVNode.props)) {\n      (element as any)[key] = undefined;\n    }\n  }\n\n  // Aktualizuj dzieci rekurencyjnie\n  const maxLength = Math.max(newVNode.children.length, oldVNode.children.length);\n  for (let i = 0; i < maxLength; i++) {\n    updateElement(element, newVNode.children[i], oldVNode.children[i], i);\n  }\n}\n\nexport function createVirtualDOM(element: HTMLElement): VNode {\n  const type = element.tagName.toLowerCase();\n  const props: { [key: string]: any } = {};\n  const content = element.textContent;\n  // Przejdź przez atrybuty elementu\n  Array.from(element.attributes).forEach((attr) => {\n    props[attr.name] = attr.value;\n  });\n\n  // Przetwarzaj dzieci elementu rekurencyjnie\n  const children = Array.from(element.childNodes).map((child) => {\n    if (child.nodeType === Node.ELEMENT_NODE) {\n      return createVirtualDOM(child as HTMLElement);\n    } else if (child.nodeType === Node.TEXT_NODE) {\n      return {type: 'text', props: {value: child.textContent}, children: []};\n    }\n  }).filter(Boolean) as VNode[];\n\n  return {type, props, children, content};\n}\n\nfunction bindXModel(element: HTMLElement, model: any, path: string): void {\n  const target = path.split('.').reduce((obj, key) => obj[key], model);\n\n  if (element.tagName === 'INPUT') {\n    const input = element as HTMLInputElement;\n\n    // Ustaw wartość początkową\n    input.value = target;\n\n    // Zdarzenie na zmianę wartości\n    input.addEventListener('input', (e) => {\n      const newValue = (e.target as HTMLInputElement).value;\n      const keys = path.split('.');\n      const lastKey = keys.pop()!;\n      const targetObject = keys.reduce((obj, key) => obj[key], model);\n      targetObject[lastKey] = newValue; // To wywoła Proxy\n    });\n  } else {\n    // Ustaw tekst początkowy\n    element.textContent = target;\n  }\n\n  // Dodaj atrybut do identyfikacji elementu podczas aktualizacji\n  element.setAttribute('data-bind-path', path);\n}\n\nexport function bindClick(element: HTMLElement, model: any): void {\n  const clickHandler = element.getAttribute('@click');\n  if (clickHandler) {\n    const fn = new Function('model', `with(model) { ${clickHandler} }`);\n    element.addEventListener('click', () => fn(model));\n  }\n}\nfunction bindPlaceholders(element: HTMLElement, model: any): void {\n  const originalText = element.textContent || '';\n\n  // Znajdź wszystkie wyrażenia w formacie { path.to.value }\n  const matches = originalText.matchAll(/\\{\\s*([\\w.]+)\\s*\\}/g);\n\n  // Utwórz mapę powiązań placeholderów z modelem\n  const bindings: { path: string; placeholder: string }[] = [];\n  for (const match of matches) {\n    const path = match[1].trim(); // Ścieżka do modelu, np. \"person.name\"\n    const placeholder = match[0]; // Pełny placeholder, np. \"{ person.name }\"\n    bindings.push({ path, placeholder });\n  }\n\n  // Funkcja aktualizująca tekst elementu\n  function updateText() {\n    let updatedText = originalText;\n    for (const { path, placeholder } of bindings) {\n      const value = path.split('.').reduce((obj, key) => obj[key], model);\n      updatedText = updatedText.replace(placeholder, value ?? '');\n    }\n    element.textContent = updatedText;\n  }\n\n  // Ustaw początkowy tekst\n  updateText();\n\n  // Reaktywność: aktualizuj tekst przy zmianie modelu\n  createReactiveModel(model, (updatedPath) => {\n    if (bindings.some(({ path }) => updatedPath.startsWith(path.split('.')[0]))) {\n      updateText();\n    }\n  });\n}\n\n\nexport function initializeApp(selector: string, model: any): void {\n  const root = document.querySelector(selector) as HTMLElement;\n\n  // Reaktywność\n  const reactiveModel = createReactiveModel(model, (path) => {\n    updateHTML(root, reactiveModel, path);\n  });\n\n  // Przetwarzanie elementów\n  function processElement(element: HTMLElement): void {\n    // Obsługa x-model\n    const modelAttr = element.getAttribute('x-model');\n    if (modelAttr) {\n      bindXModel(element, reactiveModel, modelAttr);\n    }\n\n    // Obsługa @click\n    bindClick(element, reactiveModel);\n\n    // Obsługa placeholderów w tekście\n    if (element.childNodes.length === 1 && element.childNodes[0].nodeType === Node.TEXT_NODE) {\n      const textContent = element.textContent || '';\n      if (textContent.includes('{') && textContent.includes('}')) {\n        bindPlaceholders(element, reactiveModel);\n      }\n    }\n\n    // Rekurencyjnie przetwarzaj dzieci\n    Array.from(element.children).forEach((child) => processElement(child as HTMLElement));\n  }\n\n\n  processElement(root);\n}\n\n"],"names":["createReactiveModel","model","onChange","createProxy","obj","path","target","key","value","updateHTML","root","element","input","textContent","bindPlaceholders","render","vNode","eventType","child","childElement","updateElement","parent","newVNode","oldVNode","index","maxLength","i","createVirtualDOM","type","props","content","attr","children","bindXModel","e","newValue","keys","lastKey","targetObject","bindClick","clickHandler","fn","originalText","matches","bindings","match","placeholder","updateText","updatedText","updatedPath","initializeApp","selector","reactiveModel","processElement","modelAttr"],"mappings":"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"}