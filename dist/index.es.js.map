{"version":3,"file":"index.es.js","sources":["../src/main.ts"],"sourcesContent":["import {VNode} from './types/v-node.ts';\n\nfunction createReactiveModel(model: any, onChange: (path: string) => void): any {\n  function createProxy(obj: any, path: string[] = []): any {\n    return new Proxy(obj, {\n      get(target, key) {\n        const value = target[key];\n        if (typeof value === 'object' && value !== null) {\n          return createProxy(value, [...path, key as string]);\n        }\n        return value;\n      },\n      set(target, key, value) {\n        target[key] = value;\n        onChange([...path, key as string].join('.'));\n        return true;\n      },\n    });\n  }\n\n  return createProxy(model);\n}\n\nfunction updateHTML(root: HTMLElement, model: any, path: string): void {\n  const elements = root.querySelectorAll(`[data-bind-path=\"${path}\"]`);\n\n  elements.forEach((element) => {\n    if (element.tagName === 'INPUT') {\n      const input = element as HTMLInputElement;\n      const value = path.split('.').reduce((obj, key) => obj[key], model);\n      if (input.value !== value) {\n        input.value = value;\n      }\n    } else {\n      const originalText = element.textContent || '';\n      if (originalText.includes('{') && originalText.includes('}')) {\n        bindPlaceholders(element as HTMLElement, model);\n      } else {\n        element.textContent = path.split('.').reduce((obj, key) => obj[key], model);\n      }\n    }\n  });\n}\n\nfunction render(vNode: VNode): HTMLElement {\n  const element = document.createElement(vNode.type);\n  if (vNode.content) {\n    element.textContent = vNode.content;\n  }\n  // Ustawienie atrybutów i zdarzeń\n  for (const [key, value] of Object.entries(vNode.props)) {\n    if (key.startsWith('on') && typeof value === 'function') {\n      const eventType = key.slice(2).toLowerCase();\n      element.addEventListener(eventType, value);\n    } else {\n      (element as any)[key] = value; // np. element.value\n    }\n  }\n\n  // Renderowanie dzieci\n  vNode.children.forEach((child) => {\n    const childElement = typeof child === 'string'\n      ? document.createTextNode(child)\n      : render(child);\n    element.appendChild(childElement);\n  });\n\n  return element;\n}\n\nfunction updateElement(parent: HTMLElement, newVNode: VNode, oldVNode?: VNode, index = 0): void {\n  const child = parent.childNodes[index];\n\n  // Jeśli stary węzeł nie istnieje, dodaj nowy\n  if (!oldVNode) {\n    parent.appendChild(render(newVNode));\n    return;\n  }\n\n  // Jeśli nowy węzeł nie istnieje, usuń stary\n  if (!newVNode) {\n    if (child) parent.removeChild(child);\n    return;\n  }\n\n  // Jeśli typ węzłów różni się, zastąp stary nowym\n  if (newVNode.type !== oldVNode.type) {\n    parent.replaceChild(render(newVNode), child!);\n    return;\n  }\n\n  // Aktualizuj atrybuty\n  const element = child as HTMLElement;\n  for (const [key, value] of Object.entries(newVNode.props)) {\n    if (key.startsWith('on')) {  // Zdarzenia są stałe\n      continue;\n    }\n\n    if ((element as any)[key] !== value) {\n      (element as any)[key] = value;\n    }\n  }\n\n  // Usuwanie starych atrybutów\n  for (const key of Object.keys(oldVNode.props)) {\n    if (!(key in newVNode.props)) {\n      (element as any)[key] = undefined;\n    }\n  }\n\n  // Aktualizuj dzieci rekurencyjnie\n  const maxLength = Math.max(newVNode.children.length, oldVNode.children.length);\n  for (let i = 0; i < maxLength; i++) {\n    updateElement(element, newVNode.children[i], oldVNode.children[i], i);\n  }\n}\n\nfunction createVirtualDOM(element: HTMLElement): VNode {\n  const type = element.tagName.toLowerCase();\n  const props: { [key: string]: any } = {};\n  const content = element.textContent;\n  // Przejdź przez atrybuty elementu\n  Array.from(element.attributes).forEach((attr) => {\n    props[attr.name] = attr.value;\n  });\n\n  // Przetwarzaj dzieci elementu rekurencyjnie\n  const children = Array.from(element.childNodes).map((child) => {\n    if (child.nodeType === Node.ELEMENT_NODE) {\n      return createVirtualDOM(child as HTMLElement);\n    } else if (child.nodeType === Node.TEXT_NODE) {\n      return {type: 'text', props: {value: child.textContent}, children: []};\n    }\n  }).filter(Boolean) as VNode[];\n\n  return {type, props, children, content};\n}\n\nfunction bindXModel(element: HTMLElement, model: any, path: string): void {\n  const target = path.split('.').reduce((obj, key) => obj[key], model);\n\n  if (element.tagName === 'INPUT') {\n    const input = element as HTMLInputElement;\n\n    // Ustaw wartość początkową\n    input.value = target;\n\n    // Zdarzenie na zmianę wartości\n    input.addEventListener('input', (e) => {\n      const newValue = (e.target as HTMLInputElement).value;\n      const keys = path.split('.');\n      const lastKey = keys.pop()!;\n      const targetObject = keys.reduce((obj, key) => obj[key], model);\n      targetObject[lastKey] = newValue; // To wywoła Proxy\n    });\n  } else {\n    // Ustaw tekst początkowy\n    element.textContent = target;\n  }\n\n  // Dodaj atrybut do identyfikacji elementu podczas aktualizacji\n  element.setAttribute('data-bind-path', path);\n}\n\nfunction bindClick(element: HTMLElement, model: any): void {\n  const clickHandler = element.getAttribute('@click');\n  if (clickHandler) {\n    const fn = new Function('model', `with(model) { ${clickHandler} }`);\n    element.addEventListener('click', () => fn(model));\n  }\n}\n\nfunction bindPlaceholders(element: HTMLElement, model: any): void {\n  const originalText = element.textContent || '';\n\n  // Znajdź wszystkie wyrażenia w formacie { path.to.value }\n  const matches = originalText.matchAll(/\\{\\s*([\\w.]+)\\s*\\}/g);\n\n  // Utwórz mapę powiązań placeholderów z modelem\n  const bindings: { path: string; placeholder: string }[] = [];\n  for (const match of matches) {\n    const path = match[1].trim(); // Ścieżka do modelu, np. \"person.name\"\n    const placeholder = match[0]; // Pełny placeholder, np. \"{ person.name }\"\n    bindings.push({path, placeholder});\n  }\n\n  // Funkcja aktualizująca tekst elementu\n  function updateText() {\n    let updatedText = originalText;\n    for (const {path, placeholder} of bindings) {\n      const value = path.split('.').reduce((obj, key) => obj[key], model);\n      updatedText = updatedText.replace(placeholder, value ?? '');\n    }\n    element.textContent = updatedText;\n  }\n\n  // Ustaw początkowy tekst\n  updateText();\n\n  // Przypisz atrybut data-bind-path do śledzenia\n  bindings.forEach(({path}) => {\n    element.setAttribute('data-bind-path', path);\n  });\n}\n\nexport function initializeApp(selector: string, model: any): void {\n  const root = document.querySelector(selector) as HTMLElement;\n\n  // Reaktywność\n  const reactiveModel = createReactiveModel(model, (path) => {\n    updateHTML(root, reactiveModel, path);\n  });\n\n  // Przetwarzanie elementów\n  function processElement(element: HTMLElement): void {\n    // Obsługa x-model\n    const modelAttr = element.getAttribute('x-model');\n    if (modelAttr) {\n      bindXModel(element, reactiveModel, modelAttr);\n    }\n\n    // Obsługa @click\n    bindClick(element, reactiveModel);\n\n    // Obsługa placeholderów w tekście\n    if (element.childNodes.length === 1 && element.childNodes[0].nodeType === Node.TEXT_NODE) {\n      const textContent = element.textContent || '';\n      if (textContent.includes('{') && textContent.includes('}')) {\n        bindPlaceholders(element, reactiveModel);\n      }\n    }\n\n    // Rekurencyjnie przetwarzaj dzieci\n    Array.from(element.children).forEach((child) => processElement(child as HTMLElement));\n  }\n\n  processElement(root);\n}\n"],"names":["createReactiveModel","model","onChange","createProxy","obj","path","target","key","value","updateHTML","root","element","input","originalText","bindPlaceholders","bindXModel","e","newValue","keys","lastKey","targetObject","bindClick","clickHandler","fn","matches","bindings","match","placeholder","updateText","updatedText","initializeApp","selector","reactiveModel","processElement","modelAttr","textContent","child"],"mappings":"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"}