{"version":3,"file":"index.es.js","sources":["../src/bindings.ts","../src/virtual-dom.ts","../src/main.ts"],"sourcesContent":["export type Binding = {\n  path: string,\n  placeholder: string,\n};\nexport type Bindings = Binding[];\n\nexport function getBindings(element:HTMLElement): Bindings {\n  const textBindings = getBindingsForText(element.textContent);\n  if(element.nodeType === Node.TEXT_NODE) {\n    return textBindings;\n  }\n  const attributeBindings=[];\n  const xModel = element.getAttribute('@model');\n  if(xModel) {\n    attributeBindings.push({path: xModel, placeholder: xModel});\n  }\n  return [...textBindings, ...attributeBindings];\n}\nexport function getBindingsForText(content: string | null): Bindings {\n  if (!content) {\n    return [];\n  }\n  const matches = Array.from(content.matchAll(/\\{\\s*([\\w.]+)\\s*\\}/g));\n  return matches.map((match) => ({\n    path: match[1].trim(),\n    placeholder: match[0],\n  }));\n}\n","import {getBindings, getBindingsForText} from './bindings.ts';\nimport {MixedObject} from './types/mixed-object.ts';\nimport {VNode} from './types/v-node.ts';\n\nfunction getChildren(element: HTMLElement): VNode[] {\n  return Array.from(element.childNodes).map((child) => {\n    if (child.nodeType === Node.ELEMENT_NODE) {\n      return createVirtualDOM(child as HTMLElement);\n    } else if (child.nodeType === Node.TEXT_NODE) {\n      return {\n        type: 'text',\n        content: child.textContent,\n        props: {},\n        children: [],\n        element: child,\n        bindPathList: getBindingsForText(child.textContent),\n      };\n    }\n  }).filter(Boolean) as VNode[];\n}\n\nexport function createVirtualDOM(element: HTMLElement): VNode {\n  const type = element.tagName.toLowerCase();\n  const props: MixedObject = {};\n  const content = element.textContent;\n\n  Array.from(element.attributes).forEach((attr) => {\n    props[attr.name] = attr.value;\n  });\n\n  const children = getChildren(element);\n  const bindings = element.childNodes.length ? [] : getBindings(element);\n  return {type, props, children, content, element, bindPathList: bindings};\n}\n","import {VNode} from './types/v-node.ts';\nimport {XInstanceData} from './types/x-instance-data.ts';\nimport {createVirtualDOM} from './virtual-dom.ts';\n\nfunction createReactiveModel(model: any, onChange: (path: string) => void): any {\n  function createProxy(obj: any, path: string[] = []): any {\n    return new Proxy(obj, {\n      get(target, key) {\n        const value = target[key];\n        if (typeof value === 'object' && value !== null) {\n          return createProxy(value, [...path, key as string]);\n        }\n        return value;\n      },\n      set(target, key, value) {\n        console.log('Model changed at:', [...path, key as string].join('.'), 'New value:', value);\n        target[key] = value;\n        onChange([...path, key as string].join('.'));\n        return true;\n      },\n    });\n  }\n\n  return createProxy(model);\n}\n\nfunction updateHTML(root: HTMLElement, vDom: VNode, model: any, path: string): void {\n  vDom.children.forEach((childVNode, index) => {\n    if (childVNode.children.length) {\n      updateHTML(root, childVNode, model, path);\n    }\n    if (childVNode.props['@model'] === path) {\n      const value = path.split('.').reduce((obj, key) => obj[key], model);\n      if (childVNode.element.tagName === 'INPUT') {\n        const input = childVNode.element as HTMLInputElement;\n        if (input.value !== value) {\n          input.value = value;\n        }\n      } else {\n        childVNode.element.textContent = value;\n      }\n      return;\n    }\n    if (!childVNode.bindPathList.length) {\n      return;\n    }\n\n    const foundBindings = childVNode.bindPathList.filter((bindPath) => bindPath.path === path);\n    if (!foundBindings.length) {\n      return;\n    }\n    let newContent = childVNode.content || '';\n    childVNode.bindPathList.forEach((binding) => {\n      const value = binding.path.split('.').reduce((obj, key) => obj[key], model);\n      newContent = newContent!.replace(binding.placeholder, value ?? '');\n    });\n    childVNode.element.textContent = newContent;\n  });\n\n\n}\n\nfunction bindXModel(element: HTMLElement, model: any, path: string): void {\n  const target = path.split('.').reduce((obj, key) => obj[key], model);\n\n  if (element.tagName === 'INPUT') {\n    const input = element as HTMLInputElement;\n\n    // Ustaw wartość początkową\n    input.value = target;\n\n    // Zdarzenie na zmianę wartości\n    input.addEventListener('input', (e) => {\n      const newValue = (e.target as HTMLInputElement).value;\n      const keys = path.split('.');\n      const lastKey = keys.pop()!;\n      const targetObject = keys.reduce((obj, key) => obj[key], model);\n      targetObject[lastKey] = newValue; // To wywoła Proxy\n    });\n  } else {\n    // Ustaw tekst początkowy\n    console.log({target});\n    element.textContent = target;\n  }\n\n  // Dodaj atrybut do identyfikacji elementu podczas aktualizacji\n  element.setAttribute('data-bind-path', path);\n}\n\nfunction bindClick(element: HTMLElement, model: any): void {\n  const clickHandler = element.getAttribute('@click');\n  if (clickHandler) {\n    const fn = new Function('model', `with(model) { ${clickHandler} }`);\n    element.addEventListener('click', () => fn(model));\n  }\n}\n\nfunction bindPlaceholdersUsingVirtualDOM(vNode: VNode, model: any): void {\n  const {content, props, element, bindPathList} = vNode;\n  console.log('element', element);\n  if (content && content.includes('{') && content.includes('}') && element.nodeType === Node.TEXT_NODE) {\n\n    const updateText = () => {\n      let updatedText = content;\n      bindPathList.forEach(({path, placeholder}) => {\n        const value = path.split('.').reduce((obj, key) => obj[key], model);\n        updatedText = updatedText.replace(placeholder, value ?? '');\n      });\n      element.textContent = updatedText;\n    };\n\n    updateText();\n\n    // Odświeżanie tekstu na zmianę modelu\n    bindPathList.forEach(({path}) => {\n      createReactiveModel(model, (updatedPath) => {\n        if (updatedPath.startsWith(path.split('.')[0])) {\n          updateText();\n        }\n      });\n    });\n  }\n\n  // Przetwarzaj dzieci rekurencyjnie\n  vNode.children.forEach((childVNode) => {\n    if (typeof childVNode === 'object') {\n      bindPlaceholdersUsingVirtualDOM(childVNode, model);\n    }\n  });\n}\n\n/**\n * Inicjalizuje aplikację z wykorzystaniem Virtual DOM\n * @param {XInstanceData} instanceData\n */\nexport function initializeAppWithVirtualDOM(instanceData: XInstanceData): void {\n  const {container, data: model} = instanceData;\n  const root = typeof container === 'string'\n    ? document.querySelector(container) as HTMLElement\n    : container;\n\n  const virtualDOM = createVirtualDOM(root);\n\n  console.log(virtualDOM);\n\n  const reactiveModel = createReactiveModel(model, (path) => {\n    updateHTML(root, virtualDOM, reactiveModel, path);\n  });\n\n  function processVNode(vNode: VNode, parentElement: HTMLElement): void {\n    if (vNode.props['@model']) {\n      bindXModel(parentElement, reactiveModel, vNode.props['@model']);\n    }\n\n    if (vNode.props['@click']) {\n      bindClick(parentElement, reactiveModel);\n    }\n\n    bindPlaceholdersUsingVirtualDOM(vNode, reactiveModel);\n\n    vNode.children.forEach((childVNode, index) => {\n      if (typeof childVNode === 'object') {\n        const childElement = parentElement.childNodes[index] as HTMLElement;\n        processVNode(childVNode, childElement);\n      }\n    });\n  }\n\n  processVNode(virtualDOM, root);\n}\n\n"],"names":["getBindings","element","textBindings","getBindingsForText","attributeBindings","xModel","content","match","getChildren","child","createVirtualDOM","type","props","attr","children","bindings","createReactiveModel","model","onChange","createProxy","obj","path","target","key","value","updateHTML","root","vDom","childVNode","index","input","bindPath","newContent","binding","bindXModel","e","newValue","keys","lastKey","targetObject","bindClick","clickHandler","fn","bindPlaceholdersUsingVirtualDOM","vNode","bindPathList","updateText","updatedText","placeholder","updatedPath","initializeAppWithVirtualDOM","instanceData","container","virtualDOM","reactiveModel","processVNode","parentElement","childElement"],"mappings":"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"}
