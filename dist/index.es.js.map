{"version":3,"file":"index.es.js","sources":["../src/main.ts"],"sourcesContent":["import {VNode} from './types/v-node.ts';\n\nexport function render(vNode: VNode): HTMLElement {\n  const element = document.createElement(vNode.type);\n  if (vNode.content) {\n    element.textContent = vNode.content;\n  }\n  // Ustawienie atrybutów i zdarzeń\n  for (const [key, value] of Object.entries(vNode.props)) {\n    if (key.startsWith('on') && typeof value === 'function') {\n      const eventType = key.slice(2).toLowerCase();\n      element.addEventListener(eventType, value);\n    } else {\n      (element as any)[key] = value; // np. element.value\n    }\n  }\n\n  // Renderowanie dzieci\n  vNode.children.forEach((child) => {\n    const childElement = typeof child === 'string'\n      ? document.createTextNode(child)\n      : render(child);\n    element.appendChild(childElement);\n  });\n\n  return element;\n}\n\nexport function updateElement(parent: HTMLElement, newVNode: VNode, oldVNode?: VNode, index = 0): void {\n  const child = parent.childNodes[index];\n\n  // Jeśli stary węzeł nie istnieje, dodaj nowy\n  if (!oldVNode) {\n    parent.appendChild(render(newVNode));\n    return;\n  }\n\n  // Jeśli nowy węzeł nie istnieje, usuń stary\n  if (!newVNode) {\n    if (child) parent.removeChild(child);\n    return;\n  }\n\n  // Jeśli typ węzłów różni się, zastąp stary nowym\n  if (newVNode.type !== oldVNode.type) {\n    parent.replaceChild(render(newVNode), child!);\n    return;\n  }\n\n  // Aktualizuj atrybuty\n  const element = child as HTMLElement;\n  for (const [key, value] of Object.entries(newVNode.props)) {\n    if (key.startsWith('on')) {  // Zdarzenia są stałe\n      continue;\n    }\n\n    if ((element as any)[key] !== value) {\n      (element as any)[key] = value;\n    }\n  }\n\n  // Usuwanie starych atrybutów\n  for (const key of Object.keys(oldVNode.props)) {\n    if (!(key in newVNode.props)) {\n      (element as any)[key] = undefined;\n    }\n  }\n\n  // Aktualizuj dzieci rekurencyjnie\n  const maxLength = Math.max(newVNode.children.length, oldVNode.children.length);\n  for (let i = 0; i < maxLength; i++) {\n    updateElement(element, newVNode.children[i], oldVNode.children[i], i);\n  }\n}\n\nexport function createVirtualDOM(element: HTMLElement): VNode {\n  const type = element.tagName.toLowerCase();\n  const props: { [key: string]: any } = {};\n  const content = element.textContent;\n  // Przejdź przez atrybuty elementu\n  Array.from(element.attributes).forEach((attr) => {\n    props[attr.name] = attr.value;\n  });\n\n  // Przetwarzaj dzieci elementu rekurencyjnie\n  const children = Array.from(element.childNodes).map((child) => {\n    if (child.nodeType === Node.ELEMENT_NODE) {\n      return createVirtualDOM(child as HTMLElement);\n    } else if (child.nodeType === Node.TEXT_NODE) {\n      return {type: 'text', props: {value: child.textContent}, children: []};\n    }\n  }).filter(Boolean) as VNode[];\n\n  return {type, props, children, content};\n}\n\nexport function bindXModel(element: HTMLElement, model: any, path: string): void {\n  const target = path.split('.').reduce((obj, key) => obj[key], model);\n\n  if (element.tagName === 'INPUT') {\n    const input = element as HTMLInputElement;\n\n    // Ustaw wartość początkową\n    input.value = target;\n\n    // Zdarzenie na zmianę wartości\n    input.addEventListener('input', (e) => {\n      const newValue = (e.target as HTMLInputElement).value;\n      const keys = path.split('.');\n      const lastKey = keys.pop()!;\n      const targetObject = keys.reduce((obj, key) => obj[key], model);\n      targetObject[lastKey] = newValue;\n      console.log(`Zaktualizowano ${path}:`, model);\n    });\n  }\n}\n\nexport function bindClick(element: HTMLElement, model: any): void {\n  const clickHandler = element.getAttribute('@click');\n  if (clickHandler) {\n    const fn = new Function('model', `with(model) { ${clickHandler} }`);\n    element.addEventListener('click', () => fn(model));\n  }\n}\n\nexport function initializeApp(selector: string, model: any): void {\n  const root = document.querySelector(selector) as HTMLElement;\n\n  function processElement(element: HTMLElement): void {\n    // Obsługa x-model\n    const modelAttr = element.getAttribute(\"x-model\");\n    if (modelAttr) {\n      bindXModel(element, model, modelAttr);\n    }\n\n    // Obsługa @click\n    bindClick(element, model);\n\n    // Rekurencyjnie przetwarzaj dzieci\n    Array.from(element.children).forEach((child) => processElement(child as HTMLElement));\n  }\n\n  processElement(root);\n}\n"],"names":["render","vNode","element","key","value","eventType","child","childElement","updateElement","parent","newVNode","oldVNode","index","maxLength","createVirtualDOM","type","props","content","attr","children","bindXModel","model","path","target","obj","input","e","newValue","keys","lastKey","targetObject","bindClick","clickHandler","fn","initializeApp","selector","root","processElement","modelAttr"],"mappings":"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"}